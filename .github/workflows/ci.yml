name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter (optional)
      run: npm run lint --if-present || echo "Linting failed, but continuing..."
      continue-on-error: true
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
      
    - name: Build project
      run: npm run build

# Uncomment the publish job below if you want automatic npm publishing
# You'll need to add NPM_TOKEN as a repository secret in GitHub
#
# publish:
#   needs: test
#   runs-on: ubuntu-latest
#   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#   
#   steps:
#   - name: Checkout code
#     uses: actions/checkout@v4
#     
#   - name: Setup Node.js
#     uses: actions/setup-node@v4
#     with:
#       node-version: '20.x'
#       cache: 'npm'
#       registry-url: 'https://registry.npmjs.org'
#       
#   - name: Install dependencies
#     run: npm ci
#     
#   - name: Build project
#     run: npm run build
#     
#   - name: Check if version changed
#     id: version-check
#     run: |
#       CURRENT_VERSION=$(node -p "require('./package.json').version")
#       echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
#       
#       # Check if this version exists on npm
#       if npm view @nurv/runce@$CURRENT_VERSION version 2>/dev/null; then
#         echo "version-exists=true" >> $GITHUB_OUTPUT
#       else
#         echo "version-exists=false" >> $GITHUB_OUTPUT
#       fi
#     
#   - name: Publish to npm
#     if: steps.version-check.outputs.version-exists == 'false'
#     run: npm publish --access public
#     env:
#       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}